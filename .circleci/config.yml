version: 2.1

jobs:
  test:
    docker:
      - image: cimg/python:3.8.16

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt

      - run:
          name: Run tests
          command: |
            pytest
            flake8

  build:
    docker:
      - image: cimg/python:3.8.16

    steps:
      - checkout            

      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt

      - run:
          name: Build and push Docker image
          command: |
            docker build -t rhunold/amd64_image_oc_letting:$CIRCLE_SHA1 .
            docker tag rhunold/amd64_image_oc_letting:$CIRCLE_SHA1 rhunold/amd64_image_oc_letting:latest               
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push rhunold/amd64_image_oc_letting:latest
            docker push rhunold/amd64_image_oc_letting:$CIRCLE_SHA1            

  # deploy_heroku:
  #   docker:
  #     - image: cimg/python:3.8.16

  #   steps:
  #     - checkout

  #     - setup_remote_docker:
  #         version: 20.10.7

  #     - run:
  #         name: Deploy to Heroku
  #         command: |
  #           echo "machine api.heroku.com login $HEROKU_EMAIL password $HEROKU_API_KEY" > ~/.netrc
  #           chmod 600 ~/.netrc
  #           heroku container:login
  #           heroku container:push web --app your-heroku-app-name
  #           heroku container:release web --app your-heroku-app-name


workflows:
  deployment_process:
    jobs:
      - test
      - build:      
          requires:
            - test
          filters:
            branches:
              only:
                - master

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: main
      # - deploy_heroku:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: main
